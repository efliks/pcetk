#!/usr/bin/python

#========================
#  M. Feliks 07.02.2013
#========================


# set   terminal postscript enhanced portrait "Verdana" 6
# set   output 'test.ps'
# set   xlabel "pH" offset 0, 0.5 font "Verdana, 8"
# set   ylabel "Probability" offset 1.5, 0 font "Verdana, 8"
# set   grid
# set   terminal svg size 710 1000 font "Verdana, 8" linewidth 0.5

# set   size ratio 0.71
# set   terminal postscript enhanced portrait


header = """
set   terminal pdf size 8.3, 11.7 font "Verdana, 8" linewidth 1.0
set   output "@OUT"

set   xrange [0:14]
set   yrange [0:1]
set   xtics  2.0 scale 0.8 offset 0, 0.3
set   mxtics
set   ytics  0.2 scale 0.8 offset 0.3, 0
set   mytics
set   xlabel "pH" offset 0, 0.8 font "Verdana, 8"
set   ylabel "Probability" offset 1.8, 0 font "Verdana, 8"
set   style line 1 lc rgb "red"   lw 4
set   style line 2 lc rgb "blue"  lw 4
set   style line 3 lc rgb "green" lw 4

set   multiplot layout 3, 4
"""

footer = """
unset multiplot
"""

#-------------------------
plots  = (
("curves",      "pdynamo"), 
("gmct/Curves", "gmct"), 
)

plot   = """
set   size 0.33, 0.20
set   origin @X, @Y
set   title "@TITLE" font "Verdana Bold, 8" offset 0, -0.5
"""

for i, p in enumerate (plots):
  dire, title = p
  if i < 1:
    t = "plot "
  else:
    t = ", "
  plot = "%s%s\"%s/@FILE\" w l ls %d t \"%s\"" % (plot, t, dire, i + 1, title)


#-------------------------
def wf (p, data):
  f = open ("page%02d.gnuplot" % p, "w")
  f.write (header.replace ("@OUT", "page%02d.pdf" % p))

  f.writelines (data)
  f.write (footer)

  f.close ()

#-------------------------
datf = {
"HIS" : ("PRTA_%s_HSD.dat", "PRTA_%s_HSE.dat", "PRTA_%s_HSP.dat", "PRTA_%s_fd.dat"),
\
"CRH" : ("PRTA_%s_HSD.dat", "PRTA_%s_HSE.dat", "PRTA_%s_HSP.dat", "PRTA_%s_fd.dat"),
\
"CRT" : ("PRTA_%s_p.dat", "PRTA_%s_d.dat"),
\
"4HP" : ("PRTA_%s_carb_deprot.dat", "PRTA_%s_hydr_deprot.dat", "PRTA_%s_full_prot.dat", "PRTA_%s_fd.dat"),
\
"ARG" : ("PRTA_%s_p.dat", "PRTA_%s_d.dat"),
\
"ASP" : ("PRTA_%s_p.dat", "PRTA_%s_d.dat"),
\
"CYS" : ("PRTA_%s_p.dat", "PRTA_%s_d.dat"),
\
"GLU" : ("PRTA_%s_p.dat", "PRTA_%s_d.dat"),
\
"TYR" : ("PRTA_%s_p.dat", "PRTA_%s_d.dat"),
\
"LYS" : ("PRTA_%s_p.dat", "PRTA_%s_d.dat"),
\
}

# repl  = {"p" : "prot.", "d" : "deprot.", 
#   "fd" : "fully deprot.", "HSD" : "HSD", "HSE" : "HSE", "HSP" : "HSP",
#   "carb_deprot" : "-COO(-), -OH", "hydr_deprot" : "-COOH, -O(-)", "full_prot" : "-COOH, -OH"}



#-------------------------
import glob

files = glob.glob ("curves/*.dat")
resid = []
for f in files:
  segment, residue, instance = f.split ("_")
  instance = instance.split (".")[0]
  entry    = [residue[3:], residue[:3]]
  if entry not in resid: resid.append (entry)

x, y  = 0, 0
O     = []
page  = 1

for (rnumb, rname) in resid:

  for f in datf[rname]:
    r      = "%s%s" % (rname, rnumb)
    File   = f % r
    title  = File.replace ("conf_", "").replace (".dat", "")
    ox     = x * 0.33
    oy     = 0.75 - y * 0.20  # 0.25
    cplot  = plot

    for (a, b) in (("@X", "%f" % ox), ("@Y", "%f" % oy), ("@TITLE", title), ("@FILE", File)):
      cplot = cplot.replace (a, b)


    pre, post = "", "\n"

    if x < 1 and y < 1:
      pre  = "set   key"
      post = "\nunset key\n"

    O.append ("%s%s%s" % (pre, cplot, post))

    x += 1
    if x > 2:
      x  = 0
      y += 1
      if y > 3:
        wf (page, O)
        O  = []
        y  = 0
        page += 1

if O:
  wf (page, O)


# for f in page*gnuplot ; do gnuplot $f ; done

# gs -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=plots.pdf -dBATCH page??.pdf

# rm page??.pdf page??.gnuplot

# for f in page*gnuplot ; do 
#   gnuplot $f 
#   o=`basename $f .gnuplot`
#   ps2pdf -sPAGESIZE=a4 $o.ps $o.pdf
# done
